#!/usr/bin/env bash
#/ Opens Github page for the project and branch of the CWD.
#/ Somewhat obsoleted by `hub browse`, but this tries to be a little smarter.
#/
#/ Just call it, no args or options.

set -e

# Rudimentary GitHub Enterprise support, same as hub's var
GITHUB_HOST=${GITHUB_HOST:-github.com}
OS="$(uname -s)"

die () {
    echo "Aborting: $@" && exit 1
}

usage () {
    echo "Usage: $(basename $0)"
    grep '^#/' "$0" | cut -c4-
    exit 2
}

# Check if a command is installed.
installed () {
    local cmd=$1
    command -v ${cmd} >/dev/null
}

[ $# -ne 0 ] && usage
installed git || die "You need Git installed, yo."

declare branch=$(git branch --contains HEAD | awk '{ print $2 }')
declare -r remote=$(git remote -v | awk '{ print $2 }' | head -1)
declare repo

# Extract the user/repo part
if [[ $remote =~ ^git(@|://)$GITHUB_HOST[:/](.+/.+).git$ ]]; then
    readonly repo="${BASH_REMATCH[2]}"
else
    die "Repository has no remote on $GITHUB_HOST"
fi

# Use master if current branch is local-only
# TODO: prefer a remote that verifiably contains current branch
if ! git ls-remote . | grep -q -e "refs/remotes/.*/${branch}"; then
    branch="master"
fi

declare -r url="https://$GITHUB_HOST/$repo/tree/$branch"

if [ "$OS" = "Darwin" ]; then
    open "$url"
elif installed xdg-open; then
    xdg-open "$url"
elif [ -z "$BROWSER" ]; then
    "$BROWSER" "$url"
else
    die 'Please set $BROWSER to a web launcher to use ghbrowse.'
fi

